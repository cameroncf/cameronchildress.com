# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      self_mutation_happened: ${{ steps.self_mutation.outputs.self_mutation_happened }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: build
        run: npx projen build
      - name: Find mutations
        id: self_mutation
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened
        uses: actions/upload-artifact@v4
        with:
          name: .repo.patch
          path: .repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: |-
          echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
          cat .repo.patch
          exit 1
      - name: Backup artifact permissions
        run: cd .vitepress/dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: .vitepress/dist
          overwrite: true
  pr-preview-deploy:
    name: deploy-preview
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency: deploy-preview
    env:
      CI: "true"
    if: startsWith( github.ref, 'refs/pull/' )
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .vitepress/dist
      - name: Restore build artifact permissions
        run: cd .vitepress/dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Install Netlify CLI
        run: pnpm add netlify-cli
      - name: Deploy to Netlify
        id: netlify-deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: 7840347a-1605-469f-878f-bc76c7333db4
        run: netlify deploy --dir=.vitepress/dist --alias=pr-undefined --json
      - name: Audit URL(s) using Lighthouse
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: ${{ steps.netlify-deploy.outputs.NETLIFY_URL }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
      - name: Publish Summary
        env:
          NETLIFY_URL: ${{ steps.netlify-deploy.outputs.NETLIFY_URL }}
        run: |-
          echo "### Deploy Complete! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "- Netlify URL: $NETLIFY_URL" >> $GITHUB_STEP_SUMMARY
  production-deploy:
    name: deploy-main
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency: deploy-main
    env:
      CI: "true"
    if: startsWith( github.ref, 'refs/heads/main' )
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .vitepress/dist
      - name: Restore build artifact permissions
        run: cd .vitepress/dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Install Netlify CLI
        run: pnpm add netlify-cli
      - name: Deploy to Netlify
        id: netlify-deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: 7840347a-1605-469f-878f-bc76c7333db4
        run: netlify deploy --dir=.vitepress/dist --prod
      - name: Audit URL(s) using Lighthouse
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: ${{ steps.netlify-deploy.outputs.NETLIFY_LIVE_URL }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
      - name: Publish Summary
        env:
          NETLIFY_URL: ${{ steps.netlify-deploy.outputs.NETLIFY_LIVE_URL }}
        run: |-
          echo "### Deploy Complete! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "- Netlify URL: $NETLIFY_URL" >> $GITHUB_STEP_SUMMARY
